package com.github.seraphain.examples.cxf;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.0
 * 2015-05-23T19:22:32.567+08:00
 * Generated source version: 3.1.0
 * 
 */
@WebServiceClient(name = "CxfServerService", 
                  wsdlLocation = "http://localhost:8080/cxf-server/cxfServer?wsdl",
                  targetNamespace = "http://cxf.examples.seraphain.github.com/") 
public class CxfServerService extends javax.xml.ws.Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://cxf.examples.seraphain.github.com/", "CxfServerService");
    public final static QName CxfServerPort = new QName("http://cxf.examples.seraphain.github.com/", "CxfServerPort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/cxf-server/cxfServer?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CxfServerService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:8080/cxf-server/cxfServer?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CxfServerService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CxfServerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CxfServerService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public CxfServerService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CxfServerService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CxfServerService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns CxfServer
     */
    @WebEndpoint(name = "CxfServerPort")
    public CxfServer getCxfServerPort() {
        return super.getPort(CxfServerPort, CxfServer.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CxfServer
     */
    @WebEndpoint(name = "CxfServerPort")
    public CxfServer getCxfServerPort(WebServiceFeature... features) {
        return super.getPort(CxfServerPort, CxfServer.class, features);
    }

}
