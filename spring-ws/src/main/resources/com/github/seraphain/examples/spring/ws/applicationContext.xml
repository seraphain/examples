<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oxm="http://www.springframework.org/schema/oxm"
  xmlns:sws="http://www.springframework.org/schema/web-services"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-1.5.xsd 
       http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-1.5.xsd"
  default-init-method="init">

  <!-- endpoint beans -->
  <bean id="serviceEndpoint"
    class="com.github.seraphain.examples.spring.ws.endpoint.ServiceEndpoint">
  </bean>

  <bean id="exampleService"
    class="org.springframework.ws.wsdl.wsdl11.SimpleWsdl11Definition">
    <constructor-arg
      value="classpath:com/github/seraphain/examples/spring/ws/exampleService.wsdl" />
  </bean>

  <bean id="exampleSchemaCollection"
    class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection">
    <property name="xsds"
      value="classpath:com/github/seraphain/examples/spring/ws/exampleServiceSchema.xsd" />
    <property name="inline" value="true" />
  </bean>

  <bean name="exampleServiceSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
    <property name="xsd"
      value="classpath:com/github/seraphain/examples/spring/ws/exampleServiceSchema.xsd" />
  </bean>

  <bean id="exampleMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
    <property name="contextPath"
      value="com.github.seraphain.examples.spring.ws.beans" />
  </bean>

  <bean
    class="org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapter">
    <constructor-arg ref="exampleMarshaller" />
  </bean>

  <bean
    class="org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping">
    <property name="interceptors">
      <list>
        <bean
          class="org.springframework.ws.soap.server.endpoint.interceptor.SoapEnvelopeLoggingInterceptor" />
        <bean
          class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
          <property name="xsdSchemaCollection" ref="exampleSchemaCollection" />
          <property name="validateRequest" value="true" />
          <property name="validateResponse" value="true" />
        </bean>
      </list>
    </property>
    <property name="order" value="1" />
  </bean>

  <!-- SOAP fault exception resolver -->
  <bean
    class="com.github.seraphain.examples.spring.ws.endpoint.ExampleSoapFaultAnnotationExceptionResolver">
    <property name="marshaller" ref="exampleMarshaller" />
    <property name="order" value="1" />
  </bean>

  <bean
    class="org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver">
    <property name="defaultFault" value="SERVER" />
    <property name="exceptionMappings">
      <props>
        <prop key="org.springframework.oxm.UnmarshallingFailureException">CLIENT,Invalid request</prop>
        <prop key="org.springframework.oxm.ValidationFailureException">CLIENT,Invalid request</prop>
      </props>
    </property>
    <property name="order" value="2" />
  </bean>

  <!-- IMPORTANT: Use Sun's reference implementation instead of JBoss implementation -->
  <bean id="messageFactory"
    class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory">
    <property name="messageFactory">
      <bean
        class="com.sun.xml.messaging.saaj.soap.ver1_1.SOAPMessageFactory1_1Impl" />
    </property>
  </bean>

  <bean id="messageReceiver"
    class="org.springframework.ws.soap.server.SoapMessageDispatcher" />

</beans>
