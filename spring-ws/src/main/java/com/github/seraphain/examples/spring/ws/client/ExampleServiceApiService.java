
package com.github.seraphain.examples.spring.ws.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "exampleServiceApiService", targetNamespace = "http://seraphain.github.com/service", wsdlLocation = "file:/D:/Application/Development/workspace-java/examples/spring-ws/src/main/resources/com/github/seraphain/examples/spring/ws/exampleService.wsdl")
public class ExampleServiceApiService
    extends Service
{

    private final static URL EXAMPLESERVICEAPISERVICE_WSDL_LOCATION;
    private final static WebServiceException EXAMPLESERVICEAPISERVICE_EXCEPTION;
    private final static QName EXAMPLESERVICEAPISERVICE_QNAME = new QName("http://seraphain.github.com/service", "exampleServiceApiService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/Application/Development/workspace-java/examples/spring-ws/src/main/resources/com/github/seraphain/examples/spring/ws/exampleService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        EXAMPLESERVICEAPISERVICE_WSDL_LOCATION = url;
        EXAMPLESERVICEAPISERVICE_EXCEPTION = e;
    }

    public ExampleServiceApiService() {
        super(__getWsdlLocation(), EXAMPLESERVICEAPISERVICE_QNAME);
    }

    public ExampleServiceApiService(WebServiceFeature... features) {
        super(__getWsdlLocation(), EXAMPLESERVICEAPISERVICE_QNAME, features);
    }

    public ExampleServiceApiService(URL wsdlLocation) {
        super(wsdlLocation, EXAMPLESERVICEAPISERVICE_QNAME);
    }

    public ExampleServiceApiService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, EXAMPLESERVICEAPISERVICE_QNAME, features);
    }

    public ExampleServiceApiService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ExampleServiceApiService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ExampleServiceApi
     */
    @WebEndpoint(name = "exampleServiceApiSoap11")
    public ExampleServiceApi getExampleServiceApiSoap11() {
        return super.getPort(new QName("http://seraphain.github.com/service", "exampleServiceApiSoap11"), ExampleServiceApi.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ExampleServiceApi
     */
    @WebEndpoint(name = "exampleServiceApiSoap11")
    public ExampleServiceApi getExampleServiceApiSoap11(WebServiceFeature... features) {
        return super.getPort(new QName("http://seraphain.github.com/service", "exampleServiceApiSoap11"), ExampleServiceApi.class, features);
    }

    private static URL __getWsdlLocation() {
        if (EXAMPLESERVICEAPISERVICE_EXCEPTION!= null) {
            throw EXAMPLESERVICEAPISERVICE_EXCEPTION;
        }
        return EXAMPLESERVICEAPISERVICE_WSDL_LOCATION;
    }

}
